# Multi-stage build for Python backend
FROM python:3.11-slim as builder

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY pyproject.toml README.md ./
RUN pip install --no-cache-dir -e .

# Install additional dependencies
RUN pip install --no-cache-dir \
    uvicorn[standard] \
    gunicorn \
    jax[cpu] \
    flax \
    flwr \
    fastapi \
    pandas \
    numpy \
    scikit-learn \
    matplotlib \
    seaborn \
    pydantic \
    httpx

# Production stage
FROM python:3.11-slim

# Create non-root user
RUN groupadd -r fedsense && useradd -r -g fedsense fedsense

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    && rm -rf /var/lib/apt/lists/*

# Copy Python dependencies from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY fedsense/ ./fedsense/
COPY pyproject.toml .
COPY README.md .

# Create necessary directories
RUN mkdir -p models data logs && \
    chown -R fedsense:fedsense /app

# Switch to non-root user
USER fedsense

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Start command
CMD ["python", "-m", "fedsense.serve_fastapi", "--host", "0.0.0.0", "--port", "8000"]
