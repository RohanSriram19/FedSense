# Multi-stage build to reduce final image size while keeping all ML dependencies
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy and install Python dependencies
COPY pyproject.toml README.md ./
COPY fedsense/ ./fedsense/

# Install all ML dependencies in builder stage
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -e . && \
    pip install --no-cache-dir \
    uvicorn[standard] \
    gunicorn \
    fastapi \
    pydantic \
    httpx \
    jax[cpu] \
    flax \
    flwr \
    pandas \
    numpy \
    scikit-learn \
    matplotlib \
    seaborn

# Production stage - smaller final image
FROM python:3.11-slim

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY fedsense/ ./fedsense/
COPY pyproject.toml README.md ./

# Create necessary directories
RUN mkdir -p models data logs

# Expose port
EXPOSE $PORT

# Start with full ML capabilities
CMD ["sh", "-c", "python -m fedsense.serve_fastapi --host 0.0.0.0 --port ${PORT:-8000}"]
