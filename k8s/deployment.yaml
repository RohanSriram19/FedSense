apiVersion: apps/v1
kind: Deployment
metadata:
  name: fedsense-backend
  labels:
    app: fedsense-backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fedsense-backend
  template:
    metadata:
      labels:
        app: fedsense-backend
    spec:
      containers:
      - name: fedsense-backend
        image: fedsense/backend:latest
        ports:
        - containerPort: 8000
        env:
        - name: MLFLOW_TRACKING_URI
          value: "http://mlflow-service:5000"
        - name: TRITON_URL
          value: "http://triton-service:8001"
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: fedsense-backend-service
spec:
  selector:
    app: fedsense-backend
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fedsense-frontend
  labels:
    app: fedsense-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: fedsense-frontend
  template:
    metadata:
      labels:
        app: fedsense-frontend
    spec:
      containers:
      - name: fedsense-frontend
        image: fedsense/frontend:latest
        ports:
        - containerPort: 3000
        env:
        - name: NEXT_PUBLIC_API_URL
          value: "http://fedsense-backend-service:8000"
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"

---
apiVersion: v1
kind: Service
metadata:
  name: fedsense-frontend-service
spec:
  selector:
    app: fedsense-frontend
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fedsense-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: fedsense.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: fedsense-frontend-service
            port:
              number: 3000
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: fedsense-backend-service
            port:
              number: 8000
